makeCacheMatrix <- function(x = matrix()) {
       m <- NULL
       #set the matrix
       set <- function(y) {
                x <<- y
                m <<- NULL
        }
        #get the matrix
        get <- function() x
        #set the inverse matrix
        setInverse<- function(inverse) m <<- inverse
        getInverse <- function() m
        list(set = set, get = get,
             setInverse = setInverse,
             getInverse = getInverse)
}

cacheSolve <- function(x, ...) {
#Return a matrix that is the inverse of x
        m <- x$getInverse()
        #If inverse matrix exists, obtain the data
        if(!is.null(m)) {
                message("getting cached data")
                return(m)
        }
        #obtain the matrix and compute the inverse matrix
        data <- x$get()
        m <- solve(data, ...)
        x$setInverse(m)
        m
}
